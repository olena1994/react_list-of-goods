{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","show","setState","reverse","sortAlphabetically","sort","firstGood","nextGood","localeCompare","reset","sortByLength","length","className","this","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,WAAW,GAHf,EAMEC,KAAO,WACL,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBE,WAAYF,EAAME,eARxB,EAYEG,QAAU,WACR,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOI,eAd9B,EAkBEC,mBAAqB,WACnB,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOM,MAAK,SAACC,EAAWC,GAAZ,OAAyBD,EAAUE,cAAcD,WApBpF,EAwBEE,MAAQ,WACN,EAAKP,SAAS,CACZH,MAAM,GAAD,OAAMH,MA1BjB,EA8BEc,aAAe,WACb,EAAKR,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOM,MAAK,SAACC,EAAWC,GAAZ,OAAyBD,EAAUK,OAASJ,EAASI,eAhCxF,4CAoCE,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,uCACCC,KAAKf,MAAME,UAER,gCACE,oBAAIY,UAAU,YAAd,SACGC,KAAKf,MAAMC,MAAMe,KAAI,SAAAC,GAAI,OACxB,6BACGA,GADMA,QAMb,wBACEC,KAAK,SACLJ,UAAU,cACVK,QAASJ,KAAKV,QAHhB,qBAQA,wBACEa,KAAK,SACLJ,UAAU,cACVK,QAASJ,KAAKT,mBAHhB,iCAQA,wBACEY,KAAK,SACLJ,UAAU,cACVK,QAASJ,KAAKH,aAHhB,4BAQA,wBACEM,KAAK,SACLJ,UAAU,cACVK,QAASJ,KAAKJ,MAHhB,sBAUF,wBACEO,KAAK,SACLJ,UAAU,cACVK,QAASJ,KAAKZ,KAHhB,0BArFZ,GAAyBiB,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19c8facd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  goods: string[];\n  isVisible: boolean;\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isVisible: false,\n  };\n\n  show = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((firstGood, nextGood) => firstGood.localeCompare(nextGood)),\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n    });\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((firstGood, nextGood) => firstGood.length - nextGood.length),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {this.state.isVisible\n          ? (\n            <div>\n              <ul className=\"App--list\">\n                {this.state.goods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n\n              <button\n                type=\"button\"\n                className=\"App--button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App--button\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App--button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App--button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </div>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"App--button\"\n              onClick={this.show}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}